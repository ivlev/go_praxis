/*
1.47 Даны основания равнобедренной трапеции и угол при большем основании. Найти площадь трапеции.

Надо найти высоту h. Высота - это катет противолежащий углу "f" у основания. вычисляется по формуле: р = tg(a)*d
где d - прилежащий катет, длина которого равна расстояни. от точки пересечения высоты до заданного угла. 

*/

package main

import (
	"math/rand"
	"fmt"
	"math"
	"time"
)

func get(min, max int) (int) { // генерация псевдослучайных (!!! - не путать с действительно случайными) чисел
	return rand.Intn(max-min) + min
}

// a, b, y - основания и угол, соотвественно.

// Надоело каждый раз писать формулу в конструкции fmt.Printf

func traps(a, b, y float64) (s float64) {
	if a>b {
		h := math.Tan(y * math.Pi/180) * (a-b)*0.5 // не забываем переводить градусы в радианы - "Tan returns the tangent of the radian argument x."
		s = (a * h) - 0.5 * (a - b) * h
	} else {
		h := math.Tan(y * math.Pi/180) * (b-a)*0.5
		s = (b * h) - 0.5 * (b - a) * h
	}
	return s
}

// Решил оформить отдельными функциями, для упрощенного редактирования и изменения

func main() {
	rand.Seed(time.Now().Unix()) // "сеим" случайности в основоной функции
	d := get(1, 10000) // рандомизация диапазона длины оснований.
	a := float64(get(1, d)) 
	b := float64(get(1, d))
	y := float64(get(1, 90))

	fmt.Println("\nДаны основания равнобедренной трапеции и угол прилежащий к основанию\n")
	fmt.Printf("%s\t%.0f\n%s\t%.0f\n%s\t%.0f\n\n", "a (первое основание) ", a, "b (второе основание) ", b, "y (прилежащий угол) ", y)
	fmt.Printf("%s\t%.0f\n", "Площадь трапеции ", traps(a, b, y))  // это вне условия задачи решили вдруг найти площадь
	// по хорошему надо бы посчитать

} 	// правильную ли величину возвращает функция

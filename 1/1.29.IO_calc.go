/*
1.29. Дан радиус окружности. Найти длину окружности и площадь круга.
 */
package main

import (
	"fmt"
	"math"
)

func input() (string, float64) { //  вот ради этого всё и писалось: в кругых скобках () шаблон вывода данных из функции

	var ch rune 	// увы, пока без повторного
	var c float64	// обявления переменных в функции
	var m string	// обойтись не удалось

	fmt.Printf("%s\n\t%s\n\t%s\n\t%s\n\t%s\n\t%s\n\t%s",
		"Пожалуйста, выберите единицу измерения выбрав соотвествующую цифру",
		"микрометры:\t1",
		"милиметры:\t2",
		"сантиметры:\t3",
		"метры:\t\t4",
		"километры:\t5",
		"световые года:\t6\n")
	fmt.Print("Введите выбранный номер: ")
	fmt.Scanf("%d", &ch)

	switch ch {
	default:
		m = " сам-сначала-определись-чего\n"
		c = 1e+20
	case 1:
		m = " микрометрах"
		c = 1e+9
	case 2:
		m = " милиметрах"
		c = 1e+3
	case 3:
		m = " сантиметрах"
		c = 1e+2
	case 4:
		m = " метрах"
		c = 1
	case 5:
		m = " километрах"
		c = 1e-3
	case 6:
		m = " световых годах"
		c = 9.461e-15
	}
return m, c  // если бы не шаблон в 11 строке появляется не характерная для других языков ошибка "To many arguments to return"

}

func main() {
	var h,c float64 // не забываем
	var m string	// объявлять переменные в основной программе, это неудобно, но иначе получается ерунда
	m, c = input() 	// в Go можно возвращать из функции не одну переменную, а несколько
	fmt.Printf("%s%s%s","Радиус окружности в", m, " равен ")
	fmt.Scanf("%f",&h)
	fmt.Printf("%s%.2f%s", "Длина окружности равна ", 2*math.Pi*(h/c), " м\n")
	fmt.Printf("%s%0.2f%s", "Площадь окружности равна ", math.Pi*math.Pow(h/c,2), " кв. м.\n")
}

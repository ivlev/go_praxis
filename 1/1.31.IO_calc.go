/*
 1.31. Даны два целых числа. Найти:
 а) их среднее арифметическое;
 б) их среднее геометрическое. 
 */

package main

import (
	"fmt"
	"time"
	"math"
	"math/rand"
)

func take(min, max int) int {
	rand.Seed(time.Now().Unix()) // А вот нельзя просто так взять и сгенерировать случайное число. Надо посеять "семеску" (seed)
	return rand.Intn(max - min) + min // И только потом - получить случайное число в нужном диапазоне
}

func data()(int, int, int){
	var a,b,i,fch int

	fmt.Print("\tВам будут даны два числа. Что будем считать:\n" +
		"\tСереднее арифметическое - набираем цифру 1 и жмем клавишу <Enter>\n" +
		"\tСреднее геометрическое - набираем цифру 2 и жмем клавишу <Enter>\n\t")
	fmt.Scanf("%d", &fch)
		for i=0;i<2;i++ {
	switch i {
	case 0: a = take(1,1200) // забавная тонкость: если указать одинаковые пределы в герераторе случайных числе
	case 1: b = take(1,1201) // получатся одни и те же значения -  пот и приходтся задавать чуть разные пределы
	}
	}
	return a, b, fch
}


func ma(a, b int){ // Среднее арифметическое
	fmt.Printf("\t%s%d%s%d%s%f\n", "Среднее арифметическое ",a," и ", b," равно ", (float64(a)+float64(b))/2)
/*
особенность приведения типов: если приводить сумму "a+b" гарантированная ошибка вычисления четного и нечетного числа будет 0.5,
поэтому приходится приодить к float каждую переменную отдельно
*/
}
func mg(a, b int){ // Среднее геометрическое
	fmt.Printf("\t%s%d%s%d%s%f\n", "Среднее геометрическое ",a," и ", b," равно ", math.Sqrt(float64(a*b)))
}

func main ()  {
	var a,b,fch int // не забывает передекларировать переменные в main, если этого не сделать - получим ошибку
	a,b,fch = data()
	switch fch {
	case 1: ma(a,b)
	case 2: mg(a,b)
	default: fmt.Println("У нас только две функции!!!")
	}
}